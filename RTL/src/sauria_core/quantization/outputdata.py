import os

# Chương trình: Ghép mỗi nhóm 32 phần tử 8-bit thành 256-bit,
# đảo ngược thứ tự 32 phần tử và ghi ra file output_data.txt

# Danh sách dữ liệu 8-bit (quantized output từ 32-bit input)
data_8bit = [
    0xd4, 0xaf, 0xcf, 0xc9, 0xcc, 0xc5, 0xdd, 0xd2, 0xcf, 0xc1, 0x95, 0xa3, 0x86, 0xa8, 0xa7, 0x90, 0xb1, 0xb5, 0xc1, 0xa7,
0xae, 0x95, 0xa3, 0xc3, 0xd5, 0xd7, 0xb6, 0xaf, 0x9c, 0x9e, 0xa0, 0x8b, 0x8d, 0x8a, 0xb4, 0xb6, 0xd6, 0xc2, 0xe4, 0xc3,
0xc4, 0x97, 0xbe, 0xc9, 0xb7, 0xc3, 0xb0, 0xbd, 0xf5, 0xba, 0xbf, 0xab, 0xb9, 0xc7, 0xc0, 0xd4, 0xca, 0xd1, 0xca, 0xc0,
0xb5, 0xb4, 0xb0, 0xb4, 0xbe, 0xe4, 0xff, 0xe4, 0xca, 0xac, 0xbd, 0xc9, 0xda, 0xd5, 0xb7, 0xa8, 0xab, 0xb0, 0xc9, 0xad,
0xb9, 0xd8, 0xd5, 0xbc, 0x85, 0xaf, 0xca, 0xac, 0xe4, 0xd4, 0xc5, 0xbc, 0x83, 0xa0, 0x9c, 0xcb, 0xaa, 0xb4, 0xbd, 0xcc,
0xc4, 0xbe, 0xd9, 0xa2, 0x8b, 0x8d, 0x95, 0xb0, 0xd0, 0xd4, 0xd6, 0xd3, 0xc5, 0xc2, 0xc5, 0xc9, 0xdd, 0xb7, 0x97, 0x9d,
0x81, 0xba, 0x8a, 0x9a, 0x91, 0xad, 0xb6, 0xae, 0xb8, 0xb5, 0xb6, 0xb3, 0xb3, 0xde, 0xe2, 0xba, 0xaf, 0xad, 0xcd, 0x9a,
0xb4, 0x99, 0x9b, 0xb6, 0xe0, 0xaa, 0xc3, 0xad, 0xb1, 0xbe, 0xb2, 0x8a, 0xc6, 0xcf, 0xcf, 0xc6, 0xaa, 0xcd, 0xe5, 0xca,
0xc9, 0xc6, 0xd5, 0xe3, 0xc5, 0xc7, 0xc9, 0xf3, 0xf0, 0xe7, 0xcd, 0xcb, 0xd2, 0xcf, 0xac, 0xcf, 0xe5, 0xf2, 0xd0, 0xb0,
0xac, 0xaa, 0xd1, 0xdf, 0xc7, 0x9e, 0x92, 0xaf, 0xd2, 0xa5, 0xb0, 0xd0, 0xc8, 0xc6, 0x9d, 0xd5, 0xb9, 0xbe, 0xe9, 0xe3,
0xd3, 0xd1, 0xb8, 0xc5, 0x92, 0x95, 0x92, 0xc0, 0xa7, 0x98, 0xab, 0xb6, 0xb8, 0x94, 0x97, 0xa2, 0x8b, 0xd3, 0xe0, 0xf3,
0xdc, 0xf4, 0xe8, 0xe9, 0xff, 0xf9, 0xd7, 0xa6, 0xbb, 0xc9, 0xa7, 0xc7, 0xb7, 0xb9, 0xa3, 0xa8, 0xae, 0xb4, 0xb0, 0x9f,
0xc4, 0x81, 0xa5, 0xc6, 0xca, 0xba, 0xb4, 0x8e, 0xcf, 0xb4, 0xcd, 0x9d, 0xc2, 0xcb, 0xc7, 0xb6, 0xd2, 0xaa, 0x98, 0x96,
0x97, 0xa4, 0xbe, 0xc8, 0xd9, 0xb7, 0xae, 0xc8, 0xb6, 0xc3, 0xdf, 0xcf, 0xbb, 0xdf, 0xc4, 0xc8, 0xd6, 0xe8, 0xe2, 0xe7,
0xb9, 0xb0, 0xc8, 0xac, 0xbd, 0xd8, 0xce, 0xd8, 0xc5, 0xb3, 0x9d, 0xbf, 0xcd, 0xb9, 0xbf, 0xa7, 0xa3, 0x9c, 0x98, 0x9b,
0xb1, 0xc0, 0xd8, 0xea, 0xde, 0xed, 0xcf, 0xac, 0xc7, 0xdd, 0xe1, 0xbe, 0xaa, 0x8c, 0x7f, 0xba, 0xb9, 0xc3, 0x9d, 0x8e,
0x95, 0x9f, 0xa3, 0x92, 0xc0, 0x9b, 0xa9, 0xe5, 0xd7, 0xc7, 0xba, 0xe3, 0xf4, 0xd0, 0xbb, 0xd9, 0xe5, 0xcd, 0xb9, 0xb9,
0xd3, 0xce, 0xc3, 0xcf, 0xd3, 0xd2, 0xc2, 0xc8, 0xa8, 0xb3, 0x9f, 0xab, 0xc6, 0xd6, 0xe2, 0xae, 0xa7, 0x82, 0xb5, 0xbb,
0xd7, 0xe6, 0xf5, 0xe4, 0xd7, 0xfd, 0xe8, 0xab, 0x99, 0xa3, 0xba, 0xb6, 0xd3, 0xbf, 0xbc, 0xb3, 0xd6, 0xd0, 0xb0, 0xc7,
0xb4, 0xcb, 0xbc, 0xf9, 0xc6, 0xcf, 0xae, 0xd3, 0xe5, 0xdd, 0xd6, 0xce, 0xdd, 0x97, 0xb1, 0xa6, 0xc8, 0xdb, 0xd6, 0xb4,
0xb4, 0xa9, 0xca, 0xb8, 0xb6, 0xbb, 0xe9, 0xaf, 0xa3, 0xaa, 0xbc, 0xd1, 0xce, 0xf5, 0xdc, 0xe3, 0xd7, 0xd5, 0xde, 0xea,
0xd9, 0xba, 0xdb, 0x96, 0xa1, 0xb6, 0xaa, 0xd1, 0xcf, 0xb4, 0x93, 0x9e, 0xac, 0x98, 0x9b, 0xac, 0xc1, 0xbe, 0xe8, 0xe1,
0xd2, 0xe4, 0xf0, 0xdd, 0xdf, 0xff, 0xf7, 0xd4, 0xf9, 0xdd, 0xf8, 0xe5, 0xe0, 0xc1, 0xdf, 0xe1, 0xe4, 0xc8, 0xb1, 0xb7,
0xab, 0xac, 0xb1, 0xda, 0xd1, 0xb6, 0xcf, 0xa0, 0xb7, 0xa5, 0xb9, 0xfa, 0xff, 0xdd, 0xdf, 0xef, 0xd8, 0xe0, 0xba, 0xa8,
0xc6, 0xbb, 0xc5, 0xa2, 0xcc, 0xe6, 0xe0, 0xbd, 0xaa, 0xd6, 0xc3, 0xd8, 0xc6, 0xcb, 0xca, 0xd3, 0xae, 0xd2, 0xdd, 0xea,
0xde, 0xc6, 0xd2, 0xa6, 0xb1, 0xad, 0xcc, 0xd7, 0xdb, 0xe4, 0xcd, 0xab, 0xb0, 0x82, 0xbb, 0xbd, 0xec, 0xbd, 0x9f, 0xa3,
0xd5, 0xec, 0xf9, 0xe9, 0xd3, 0xc8, 0xdc, 0xb6, 0xd2, 0xdc, 0xb6, 0xd9, 0xb4, 0x9a, 0xa8, 0xd0, 0xcd, 0xf2, 0xd5, 0xaf,
0xc4, 0xb8, 0xb9, 0xa1, 0x8e, 0xbb, 0xc8, 0xbf, 0xcc, 0xc2, 0xce, 0xf9, 0xcd, 0xc0, 0xca, 0xcd, 0xd1, 0xb0, 0xe9, 0xc0,
0xe8, 0xbf, 0xd3, 0xbf, 0xd2, 0xdc, 0xd4, 0xb5, 0xa3, 0xc1, 0xb9, 0xcb, 0xc8, 0xdb, 0xcc, 0xbd, 0xab, 0x8d, 0x9f, 0xb8,
0xc4, 0xeb, 0xff, 0xfb, 0xe7, 0xf3, 0xd8, 0xe0, 0xba, 0xba, 0xc1, 0xac, 0x9a, 0x9b, 0xcd, 0xeb, 0xe0, 0xb8, 0xb6, 0xc4,
0xc5, 0xda, 0xb0, 0xd1, 0xe8, 0xca, 0xc8, 0xcb, 0xcd, 0xe2, 0xc4, 0xb5, 0xc1, 0xab, 0xb0, 0xc0, 0x8e, 0xc7, 0xdb, 0xf7,
0xc9, 0xb5, 0xa5, 0xa0, 0xce, 0xce, 0xda, 0xcb, 0xba, 0xc2, 0xbe, 0xcb, 0xcc, 0xe8, 0xd7, 0xce, 0xb3, 0xa6, 0xf7, 0xe5,
0xd5, 0xe7, 0xbf, 0xcd, 0xbf, 0xd1, 0xcd, 0xcf, 0xf0, 0xcc, 0xe8, 0xc7, 0xb6, 0xb5, 0x98, 0xd1, 0xde, 0xcc, 0xe5, 0xc9,
0xee, 0xe3, 0xae, 0xdd, 0xce, 0xd5, 0xdb, 0xc2, 0xcc, 0xad, 0xc4, 0xc5, 0xdf, 0xbc, 0xe0, 0xb8, 0xd7, 0xb9, 0xc0, 0xc9,
0xd3, 0xd0, 0xb4, 0xcf, 0xb8, 0xc0, 0xcd, 0xc8, 0xc3, 0x9d, 0xae, 0xc7, 0xe0, 0xee, 0xea, 0xeb, 0xda, 0xcc, 0xb1, 0xc2,
0xb4, 0x94, 0x85, 0x97, 0xa8, 0xe1, 0xd5, 0xca, 0xc6, 0xe7, 0xf3, 0xed, 0xa5, 0xab, 0xbd, 0xcd, 0xe1, 0xda, 0xdd, 0xdc,
0xba, 0xaf, 0xe7, 0xd3, 0xbc, 0xc2, 0x86, 0xbb, 0xd9, 0xee, 0xe4, 0xcb, 0xb1, 0x98, 0xa6, 0xbb, 0xba, 0xcd, 0xac, 0xd3,
0xad, 0xbf, 0xb9, 0xbd, 0xbc, 0xc2, 0xa4, 0x9f, 0xda, 0xb0, 0xe8, 0xe6, 0xa7, 0xb2, 0xac, 0xdb, 0xea, 0xdc, 0xef, 0xd9,
0xee, 0xe3, 0xd1, 0xc8, 0xb0, 0xea, 0xdf, 0xdb, 0xe9, 0xe3, 0xd4, 0xd1, 0xd0, 0xbc, 0xc1, 0xd3, 0xdb, 0xc4, 0xbe, 0xaf,
0xc5, 0xba, 0xd6, 0xc4, 0xe2, 0xb9, 0xc8, 0xcf, 0xc5, 0xaf, 0xbf, 0xbb, 0xa9, 0xaa, 0xac, 0x9c, 0xba, 0xcc, 0xc6, 0xaa,
0xb1, 0xc6, 0xd1, 0xed, 0xf3, 0xed, 0xb3, 0xc5, 0x95, 0xa0, 0x9b, 0xa0, 0xa2, 0xa8, 0xa8, 0xdf, 0xbb, 0xd8, 0xb4, 0xbb,
0xbf, 0x9f, 0x97, 0xb0, 0x9b, 0x9b, 0xdb, 0xd2, 0xe0, 0xc5, 0xaf, 0x95, 0xeb, 0xb7, 0xcd, 0x94, 0x97, 0xae, 0xc9, 0xd6,
0xed, 0x99, 0x96, 0xb5, 0xb3, 0xa2, 0xa5, 0xbf, 0x93, 0xdc, 0xc1, 0xb3, 0x91, 0xb2, 0xe1, 0xce, 0xc0, 0xaa, 0xbb, 0xd6,
0xea, 0xea, 0xcd, 0xf7, 0xc9, 0xb8, 0xd0, 0xca, 0xd2, 0xa9, 0xc0, 0xc9, 0xa4, 0xb1, 0xba, 0xea, 0xd9, 0xdb, 0xfa, 0xf8,
0xdc, 0xd6, 0xd1, 0xb5, 0xca, 0xb0, 0xc8, 0xd2, 0xe7, 0xc7, 0xc9, 0xd2, 0xe0, 0xbc, 0xf0, 0xd4, 0xd8, 0xca, 0xd1, 0xba,
0xaf, 0xb7, 0xb3, 0xa5, 0x99, 0xa3, 0xb1, 0xb8, 0x9f, 0xaf, 0xb5, 0xb6, 0xcd, 0xde, 0xcb, 0xd6, 0xb2, 0xac, 0x91, 0x92,
0xab, 0x9d, 0xdb, 0xba, 0xc5, 0xc8, 0x8a, 0xce, 0xaa, 0xd0, 0xaa, 0xae, 0x9a, 0x9e, 0x96, 0xb7, 0xe2, 0xd4, 0xef, 0xd4,
0xc6, 0xc7, 0xc5, 0xac, 0xb6, 0x8e, 0xd1, 0xc8, 0xcd, 0xc0, 0xfc, 0xbb, 0xd0, 0xcf, 0xb3, 0xab, 0x9b, 0xa0, 0x77, 0xc4,
0xb8, 0xbb, 0x99, 0xa2, 0xb0, 0x95, 0xb2, 0x76, 0xa8, 0xa7, 0xc7, 0xc7, 0xa5, 0xc7, 0xc0, 0xcb, 0xdd, 0xdf, 0xc1, 0xb3,
0xcb, 0xb9, 0xb9, 0xbc, 0xd4, 0xdb, 0xd2, 0xd0, 0xd2, 0xc5, 0xec, 0xde, 0xa1, 0xaa, 0xc0, 0xd2, 0xd8, 0xdb, 0xe2, 0xdd,
0xf1, 0xd9, 0xdb, 0xba, 0xe7, 0xce, 0xde, 0xfa, 0xe3, 0xad, 0xba, 0xbc, 0xca, 0xc6, 0xaa, 0x84, 0xbf, 0xbe, 0xcc, 0xb4,
0xbc, 0xa6, 0xb7, 0xd1, 0xd9, 0xe7, 0xb8, 0xbc, 0xaf, 0xb3, 0xac, 0xb5, 0xe5, 0xda, 0xd2, 0xc4, 0xbe, 0xbf, 0xb4, 0xac,
0x95, 0xb1, 0x86, 0x90, 0xb1, 0xb0, 0xcb, 0xe7, 0xf9, 0xe1, 0xcf, 0xdf, 0xa6, 0xca, 0xb5, 0xb4, 0xcb, 0xae, 0xbc, 0xa3,
0xdd, 0xbc, 0xc9, 0xb6, 0xa7, 0xaf, 0xab, 0x73, 0x7b, 0xbc, 0xc3, 0xd0, 0xce, 0xab, 0xbe, 0xa8, 0xbc, 0xaa, 0xad, 0xbc,
0xd7, 0xc7, 0xc4, 0xe2, 0xc9, 0xa0, 0xc2, 0xc0, 0xc3, 0x8b, 0xa3, 0x9c, 0xb7, 0xbf, 0xc9, 0xd9, 0xe7, 0xe6, 0xbf, 0xb3,
0xca, 0xd2, 0xd4, 0xc0, 0xc2, 0xd9, 0xce, 0xca, 0xc4, 0xdc, 0xff, 0xf4, 0xdc, 0xb8, 0xca, 0xc6, 0xde, 0xd4, 0xd7, 0xa5,
0xc8, 0xb5, 0xda, 0xcb, 0xa8, 0x88, 0xb1, 0x9a, 0xba, 0xb6, 0xa7, 0xa1, 0xa8, 0xb6, 0xd7, 0xab, 0xc4, 0xdf, 0xe4, 0xca,
0xb3, 0xc6, 0xd6, 0xb4, 0xd2, 0xcc, 0xc8, 0xad, 0xa6, 0xad, 0xca, 0xdc, 0xb9, 0xaf, 0xc5, 0xa7, 0xef, 0xe1, 0xe4, 0xf6,
0xdd, 0xf3, 0xc5, 0xd4, 0xb3, 0xdc, 0xc0, 0x9e, 0xa3, 0xb2, 0xcf, 0xbe, 0xf3, 0xcc, 0xc5, 0xca, 0x9c, 0x88, 0x88, 0xb1,
0xc2, 0xe0, 0xba, 0xb8, 0xb1, 0xb6, 0xa6, 0xac, 0x87, 0xa3, 0xd5, 0xcf, 0xe5, 0xc4, 0xbf, 0xc0, 0xe8, 0xad, 0xac, 0x95,
0xc6, 0xd7, 0xaf, 0xa1, 0xc6, 0xc0, 0xe7, 0xd0, 0xc7, 0xb7, 0xdf, 0xc5, 0xb4, 0xa7, 0xbc, 0xca, 0xd4, 0xba, 0xc5, 0xcc,
0xf3, 0xf7, 0xdd, 0xde, 0xc9, 0xdd, 0xc8, 0xe6, 0xf8, 0xe2, 0xc4, 0xdc, 0xcc, 0xc4, 0xc7, 0xaf, 0xaf, 0xbd, 0xc0, 0xa4,
0x7b, 0x99, 0x96, 0x9f, 0xd1, 0xd0, 0xf3, 0xd6, 0xe0, 0xf6, 0xcb, 0xeb, 0xac, 0xbc, 0xbc, 0xc1, 0xc5, 0x96, 0xba, 0xa7,
0xc5, 0xc9, 0xba, 0xa7, 0xb0, 0x79, 0xb8, 0xb9, 0xd0, 0xf2, 0xd6, 0xf2, 0xbf, 0xd4, 0xc3, 0xcf, 0x9a, 0x8c, 0x87, 0xa2,
0x84, 0xb4, 0xc4, 0xc0, 0xb1, 0xb6, 0xc2, 0xa9, 0x96, 0xb4, 0xb6, 0xd2, 0xab, 0xd6, 0xb6, 0xb5, 0xb5, 0xc0, 0xb7, 0xc5,
0xbd, 0xb3, 0xb9, 0xb1, 0xc3, 0xd6, 0xcc, 0xd5, 0xc6, 0xaa, 0xca, 0xcb, 0xc3, 0xbb, 0xdc, 0xca, 0xca, 0xcb, 0xf7, 0xe4,
0xe4, 0xbb, 0xd3, 0xab, 0xbf, 0x9d, 0xad, 0xaf, 0xd1, 0xc1, 0xc2, 0xe3, 0xae, 0xb1, 0xc0, 0xb5, 0xc4, 0xdf, 0xeb, 0xd8,
0xc2, 0xa9, 0x9e, 0xba, 0xb3, 0xc4, 0xaa, 0xb4, 0xc2, 0xb7, 0xac, 0x99, 0x7e, 0xaa, 0xcb, 0xb2, 0xcf, 0xc5, 0xe1, 0xfc,
0xe1, 0xac, 0xbb, 0xd8, 0xc4, 0xcb, 0xad, 0xc3, 0x9e, 0x9d, 0xd0, 0xcc, 0xc4, 0xa5, 0x94, 0x90, 0xad, 0xa0, 0xad, 0xe2,
0xca, 0xcc, 0xb4, 0xbc, 0xb3, 0xd6, 0xa0, 0x99, 0xa2, 0xbd, 0xa2, 0xb8, 0xb1, 0xc5, 0xb4, 0xdf, 0xb7, 0x92, 0xb4, 0xc6,
0xce, 0xd3, 0xc7, 0xe0, 0xbe, 0xd7, 0x9d, 0xae, 0xb1, 0xa1, 0xaf, 0x92, 0xbd, 0xaf, 0xd0, 0xd6, 0xc1, 0xc3, 0x9d, 0xd6,
0xd2, 0xeb, 0xc0, 0xa5, 0xd1, 0xa1, 0xc9, 0xc9, 0xe7, 0xc6, 0xcc, 0xb0, 0xc6, 0x88, 0xbd, 0x9f, 0x97, 0xab, 0xbb, 0xba,
0x9d, 0xd3, 0xb0, 0xdf, 0xe0, 0xa9, 0xbc, 0xda, 0xcc, 0xf2, 0xf4, 0xb7, 0xd1, 0xd3, 0xcb, 0xf2, 0xc0, 0xb5, 0xa7, 0xbc,
0xbd, 0xa0, 0xb1, 0xbd, 0xc0, 0xac, 0xc7, 0xba, 0xd3, 0xd0, 0xd4, 0xb5, 0xc9, 0xd8, 0xcb, 0xc3, 0x96, 0xc1, 0x8f, 0xa2,
0xce, 0xbf, 0xc2, 0xa3, 0x98, 0x8e, 0x8b, 0xa5, 0xd9, 0xf3, 0xd2, 0xd2, 0xb7, 0xb8, 0xad, 0xc2, 0x95, 0x8c, 0x81, 0xb6,
0xa2, 0xca, 0x98, 0xce, 0xd0, 0xee, 0xc8, 0xaf, 0xad, 0xbf, 0xb7, 0xb2, 0xd6, 0xb9, 0xcf, 0xce, 0xae, 0x94, 0xbf, 0xbb,
0x98, 0x90, 0xa2, 0xb9, 0xc3, 0xaa, 0xbc, 0xc2, 0xa5, 0xd3, 0xb2, 0xd4, 0xbc, 0xdf, 0xda, 0xc4, 0xc6, 0xc1, 0xc8, 0xb7,
0xb8, 0xc4, 0xc6, 0xb9, 0xdc, 0x97, 0xbe, 0xcb, 0xb2, 0xa5, 0x8f, 0xb7, 0x98, 0xc5, 0xce, 0xca, 0xa5, 0xb8, 0xbb, 0xce,
0xd2, 0xc9, 0xd8, 0xb9, 0xbe, 0xd7, 0xc7, 0xac, 0x9c, 0xb2, 0xb7, 0xc7, 0xda, 0xb3, 0xb5, 0x9b, 0xa5, 0x93, 0xaf, 0x91,
0xc2, 0xa6, 0xc9, 0xea, 0xd8, 0xc2, 0xaa, 0xca, 0xa1, 0xad, 0xcf, 0xca, 0xdc, 0xa7, 0xa9, 0xa1, 0xb6, 0xc4, 0xbf, 0xc2,
0xb0, 0xc8, 0xcb, 0xbc, 0xac, 0xce, 0xa8, 0xb9, 0x9d, 0xc2, 0xbf, 0xce, 0xb0, 0xd2, 0xc8, 0xe9, 0xbe, 0xaf, 0xbc, 0xd3,
0xc3, 0xd6, 0xcf, 0xd1, 0xe7, 0xca, 0xb9, 0x9a, 0xb9, 0x9f, 0xa3, 0xb8, 0xb4, 0xf2, 0xc9, 0xbb, 0x98, 0x84, 0xb4, 0xb6,
0xb2, 0xb1, 0x98, 0xb4, 0xa7, 0xbc, 0xca, 0xbd, 0xdb, 0xbc, 0xc0, 0xc1, 0xa0, 0xbf, 0xb9, 0xbf, 0xdc, 0xcc, 0xa0, 0x9b,
0xa4, 0xa6, 0xc0, 0xd0, 0xd5, 0xdd, 0xaf, 0xbe, 0xb8, 0xbe, 0xbb, 0xbe, 0xc3, 0xbf, 0xd6, 0xfb, 0xc7, 0xb5, 0xb6, 0xaa,
0xbd, 0xb8, 0xd0, 0xbb, 0xab, 0x9c, 0xb6, 0x92, 0x7c, 0x6d, 0xac, 0xa8, 0xdd, 0xd4, 0xcb, 0xcf, 0x97, 0xb1, 0xbb, 0xc5,
0xd7, 0xec, 0xc9, 0xa2, 0xef, 0xcb, 0xea, 0xa8, 0xb6, 0xd3, 0xde, 0xc3, 0xbc, 0xaa, 0xa2, 0xb1, 0x91, 0xa8, 0xb2, 0xa7,
0xb9, 0xc5, 0xa3, 0xc9, 0xce, 0xd4, 0xa9, 0xb5, 0xcc, 0xbd, 0xbb, 0xd6, 0xbb, 0xae, 0xce, 0xca, 0xdb, 0xc2, 0xc7, 0xd6,
0xc5, 0xaf, 0xb4, 0xec, 0xad, 0xc8, 0xa7, 0xb3, 0xbd, 0xa6, 0xa9, 0xa0, 0x95, 0xd3, 0xbf, 0xc1, 0xb7, 0x9e, 0xb7, 0xae,
0xd0, 0xc1, 0xc8, 0xf4, 0xd0, 0xea, 0xcd, 0xc0, 0xbc, 0xbe, 0xb9, 0xa8, 0xda, 0xd0, 0xe9, 0xd6, 0xd7, 0xcd, 0xcf, 0xba,
0xa6, 0xa7, 0x9a, 0xb3, 0xcd, 0xdf, 0xc7, 0xc7, 0xc8, 0xc0, 0xce, 0xbc, 0xce, 0xae, 0xb5, 0xa7, 0xb4, 0x8e, 0x92, 0x82,
0x91, 0xa4, 0xcb, 0xce, 0xdb, 0xb7, 0x87, 0xa5, 0xac, 0xdb, 0xcd, 0xe0, 0xa4, 0xb5, 0xde, 0xcc, 0xd9, 0xb2, 0xa7, 0xbf,
0xb0, 0xb4, 0xc1, 0xac, 0xc7, 0xd6, 0xb4, 0xcb, 0xc9, 0xa5, 0xc1, 0xbf, 0xaf, 0xac, 0xcf, 0x91, 0x95, 0xb7, 0xd4, 0xae,
0xb5, 0xba, 0xcb, 0xd9, 0xd6, 0xcd, 0xd0, 0xa9, 0xa8, 0xb6, 0x9a, 0xbe, 0xdd, 0xef, 0xcd, 0xcb, 0x8b, 0xaa, 0xbf, 0xd8,
0xb8, 0xa6, 0x80, 0xb2, 0x9a, 0xc8, 0xcd, 0xcb, 0xd0, 0xcd, 0xcb, 0xb5, 0xbd, 0xcb, 0xd7, 0xeb, 0xb9, 0xcc, 0xd7, 0xc4,
0xd8, 0xbc, 0xd4, 0xba, 0xdd, 0xd0, 0xc2, 0xb8, 0xca, 0xab, 0xbd, 0xa5, 0xaf, 0xb8, 0xaf, 0xd8, 0xdd, 0xb9, 0x95, 0xb6,
0xca, 0xb3, 0xc1, 0xb0, 0xad, 0xaf, 0xa5, 0xad, 0xbe, 0xa9, 0x8d, 0xc8, 0xcf, 0xdf, 0xd0, 0xa8, 0xa9, 0xa6, 0xa9, 0xbb,
0xb2, 0xd4, 0xb8, 0xbd, 0xd0, 0xb1, 0xdf, 0xc1, 0xb4, 0xd5, 0x9d, 0xba, 0xa5, 0xa4, 0xb4, 0xac, 0x91, 0xb8, 0xc0, 0xb1,
0xae, 0xb0, 0xc6, 0xb1, 0xbc, 0xba, 0xd1, 0xb5, 0xda, 0xba, 0xd2, 0xc9, 0xcc, 0xbc, 0xd7, 0xe2, 0xc7, 0xcc, 0xa6, 0xc8,
0xb5, 0xb2, 0xb3, 0xdd, 0xda, 0xa8, 0xb4, 0xb4, 0xcc, 0xf5, 0xcc, 0xca, 0xb5, 0xc0, 0xac, 0xab, 0x86, 0x9d, 0xa7, 0xa4,
0xbe, 0xba, 0xd5, 0xc1, 0xc3, 0xdc, 0xda, 0xb5, 0xc3, 0xd1, 0xe2, 0xc0, 0xd9, 0xb7, 0xc8, 0xd5, 0xc5, 0xc7, 0xda, 0xd1,
0xc7, 0xc1, 0xb9, 0xc6, 0xaf, 0xe6, 0xa6, 0x85, 0x73, 0x9a, 0xce, 0xb4, 0xd0, 0xbe, 0xb3, 0xb0, 0xb6, 0xa5, 0xbb, 0x8e,
0xaa, 0xbe, 0xb9, 0xc1, 0xcc, 0xa6, 0xb9, 0xbc, 0xbe, 0xc5, 0xcf, 0xe8, 0xed, 0xe5, 0xdf, 0xb5, 0xc7, 0xbc, 0xac, 0xca,
0xa6, 0xe7, 0xc7, 0xc9, 0xb8, 0xa5, 0x9b, 0xa3, 0xac, 0xc7, 0xbb, 0xb7, 0xdd, 0xbe, 0xd1, 0xaf, 0xc7, 0xa4, 0xcc, 0xa4,
0xdf, 0xb9, 0xb7, 0xbc, 0xdf, 0xd5, 0xb4, 0xbd, 0xb1, 0xba, 0xae, 0xca, 0xbe, 0xd1, 0xb9, 0xab, 0xc5, 0xc0, 0xea, 0xff,
0xe5, 0xcb, 0xc1, 0xa3, 0xc5, 0xb6, 0xb2, 0xcd, 0xc0, 0xb6, 0xad, 0xa9, 0xcf, 0xd5, 0xcd, 0xd5, 0xe9, 0xac, 0xa3, 0xa5,
0xb8, 0xc0, 0xe4, 0xc2, 0xb5, 0xb2, 0xcd, 0xba, 0xbf, 0xb9, 0xd8, 0xc4, 0xbf, 0xb6, 0xca, 0xbb, 0x81, 0x8d, 0x92, 0x8b,
0xae, 0xaa, 0xcb, 0xb6, 0xbb, 0xba, 0xb8, 0xb7, 0xc0, 0x97, 0xc6, 0xc8, 0xe1, 0xd6, 0xcd, 0xc3, 0xcd, 0xac, 0xb1, 0xc7,
0xd9, 0xbd, 0xd6, 0xf0, 0xd1, 0xd1, 0xd8, 0xb1, 0xc8, 0xb8, 0xb9, 0xc5, 0xa6, 0xba, 0xb0, 0xab, 0x8e, 0x90, 0x94, 0xcb,
0xca, 0xec, 0xdf, 0xbe, 0xc0, 0xc2, 0xbc, 0xb4, 0xdd, 0xab, 0xca, 0xba, 0xaf, 0xb6, 0xde, 0xbf, 0xcc, 0xbc, 0xc3, 0xcc,
0xd3, 0xc8, 0xad, 0xb3, 0xc6, 0xbc, 0xc0, 0xc2, 0xe9, 0xed, 0xe0, 0xdd, 0xe5, 0xc0, 0xc8, 0x8f, 0xa4, 0x88, 0xa3, 0xa2,
0xca, 0xa9, 0xcf, 0xdd, 0xce, 0xd6, 0xc7, 0xb5, 0xb0, 0x95, 0x9f, 0xbd, 0xe3, 0xe1, 0xe4, 0x9c, 0xb3, 0xd3, 0xcb, 0xce,
0xcb, 0xb5, 0xc0, 0xad, 0xd3, 0xce, 0xb3, 0xa6, 0xa1, 0xa5, 0xb2, 0xc2, 0xcf, 0xe6, 0xb8, 0xbd, 0xa5, 0xba, 0xa1, 0xa9,
0x96, 0xb7, 0xaf, 0xab, 0xd0, 0xe9, 0xed, 0xd8, 0xd5, 0xbf, 0xcc, 0xde, 0xdf, 0xf1, 0xe8, 0xfe, 0xd9, 0xdd, 0xc3, 0xb6,
0xbf, 0xcc, 0xea, 0xe0, 0xd3, 0xca, 0xb8, 0xba, 0xb3, 0xb6, 0xbb, 0xe0, 0xf7, 0xd4, 0xd7, 0x9d, 0xbc, 0xa6, 0xc9, 0x8e,
0xcc, 0xbe, 0xbb, 0xc4, 0xde, 0xc6, 0xdb, 0xbe, 0xb7, 0xc8, 0xd5, 0xce, 0xc8, 0xc3, 0xac, 0xb7, 0xdd, 0xdd, 0xcb, 0xe8,
0xe9, 0xc8, 0xe5, 0xc7, 0xdc, 0xaf, 0xdc, 0xa4, 0xa8, 0xa7, 0xc2, 0xc3, 0xd4, 0xd1, 0xda, 0xdd, 0xe2, 0xc0, 0xb4, 0xa2,
0x89, 0xb0, 0xd8, 0xe7, 0xd5, 0x7a, 0x89, 0x9b, 0xbb, 0xbc, 0xba, 0xc8, 0xcc, 0xc2, 0xed, 0xd0, 0xdf, 0xcb, 0xb9, 0xc7,
0xb9, 0xbc, 0xa0, 0xbb, 0xa4, 0xc3, 0xa7, 0xc3, 0xaa, 0xd2, 0xb6, 0xde, 0xb5, 0xb9, 0xd1, 0xeb, 0xdc, 0xc8, 0xba, 0xad,
0xc5, 0xbc, 0xba, 0xcc, 0xca, 0xe3, 0xc5, 0xde, 0xbf, 0xc3, 0xb0, 0xcd, 0xc1, 0xd0, 0xea, 0xb4, 0xb8, 0xc9, 0xad, 0xb7,
0xcb, 0xd1, 0xcf, 0xcf, 0xc8, 0xa4, 0xd6, 0xa0, 0xb3, 0xa7, 0xca, 0xd2, 0xe6, 0xe6, 0xb6, 0xd4, 0xe2, 0xdf, 0xd9, 0xe2,
0xd4, 0xc8, 0xdd, 0xae, 0xaa, 0xcc, 0xd0, 0xcc, 0xc6, 0xcb, 0xc0, 0xc0, 0xef, 0xe0, 0xda, 0xac, 0xbd, 0x9b, 0xb6, 0xaa,
0xcb, 0xd9, 0xd4, 0xdb, 0xde, 0xd3, 0xe8, 0xce, 0xc4, 0xc1, 0xb9, 0xb2, 0xc9, 0xb5, 0xaa, 0x89, 0x99, 0xa5, 0xbe, 0xd7,
0xdb, 0xdb, 0xb3, 0xf3, 0xf5, 0xe3, 0xd3, 0xc3, 0xac, 0xd4, 0xca, 0xd4, 0xbc, 0xee, 0xcc, 0xd2, 0xab, 0xb1, 0xbc, 0xb9,
0xd1, 0xe1, 0xb4, 0xaf, 0x9f, 0xb9, 0xb8, 0xb4, 0xb1, 0xb7, 0xc5, 0xab, 0xc4, 0xda, 0xe3, 0xf0, 0xe3, 0xd9, 0xc9, 0xc0,
0x9c, 0xc6, 0xbf, 0xe5, 0xdf, 0xac, 0xc7, 0xd3, 0xc8, 0xd9, 0xc7, 0xb2, 0xc8, 0xb6, 0xe8, 0xc4, 0xd4, 0xab, 0xe6, 0xae,
0xde, 0xe1, 0xef, 0xab, 0xa4, 0xd1, 0xc3, 0xe3, 0xd9, 0xf0, 0xb3, 0xbe, 0xeb, 0xbc, 0xbb, 0xc6, 0xde, 0xe6, 0xc9, 0xad,
0xb4, 0xd2, 0xe4, 0xc8, 0xb8, 0xbf, 0xcd, 0xae, 0xc3, 0xa9, 0xa6, 0xd6, 0xce, 0xd0, 0xe3, 0xe8, 0xd9, 0xba, 0xbb, 0xbd,
0xd9, 0xb4, 0xbe, 0xaf, 0xaf, 0xa8, 0x9e, 0xb2, 0xc3, 0xd3, 0xcd, 0xc7, 0xdc, 0xd9, 0xd3, 0xec, 0xb2, 0xe1, 0xba, 0xce
]

# Kích thước khối (32 phần tử 8-bit)
chunk_size = 32
total_chunks = len(data_8bit) // chunk_size

# Đường dẫn file cần ghi (sử dụng đường dẫn tương đối)
output_path = "output_data.txt"

# In thông tin debug
print(f"Current working directory: {os.getcwd()}")
print(f"Tổng số phần tử 8-bit: {len(data_8bit)}")
print(f"Số khối đủ 32 phần tử: {total_chunks}")
print(f"Ghi dữ liệu vào: {os.path.abspath(output_path)}")

# Ghi file với error handling
try:
    with open(output_path, "w") as f:
        for i in range(total_chunks):
            start = i * chunk_size
            end = start + chunk_size
            chunk = data_8bit[start:end]

            # Đảo ngược thứ tự 32 phần tử trong khối
            reversed_chunk = list(reversed(chunk))

            # Ghép thành chuỗi 256-bit (64 ký tự hex)
            joined_hex = ''.join(f'{x:02x}' for x in reversed_chunk)

            # Ghi ra file dạng 0x... + xuống dòng
            f.write("0x" + joined_hex + "\n")
            
        print(f"✅ Đã ghi {total_chunks} dòng vào file!")
        
except Exception as e:
    print(f"❌ Lỗi khi ghi file: {e}")

# Kiểm tra file đã được tạo chưa
try:
    with open(output_path, "r") as f:
        lines = f.readlines()
        print(f"📊 File có {len(lines)} dòng")
        if lines:
            print(f"📝 Dòng đầu tiên: {lines[0][:50]}...")
            print(f"📝 Độ dài dòng đầu: {len(lines[0].strip())} ký tự")
except Exception as e:
    print(f"❌ Lỗi khi đọc file: {e}")

print("\n🔍 So sánh input vs output:")
print(f"Input:  32×32-bit → 1024-bit per line (256 hex chars)")
print(f"Output: 32×8-bit  → 256-bit per line (64 hex chars)")
print(f"Compression ratio: 4:1 (1024→256 bits)")